
#######################################################################
# osx only #
#######################################################################

if [ "$OS" = "darwin" ] ; then
  #######################################################################
  #  Editor #
  #######################################################################

  alias e='$EDITOR .'

  #alias tbund='cd $HOME/Library/Application\ Support/TextMate/Bundles/' #todo cd bundle and git pull

  alias dsclean='find . -type f -name .DS_Store -print0 | xargs -0 rm'
  alias dnsflush='dscacheutil -flushcache'

  alias top='top -u'
  alias login_photo='open /Library/Caches/com.apple.user501pictureCache.tiff'

  alias doc='cd $HOME/Documents'
  alias dow='cd $HOME/Downloads'
  alias down='cd $HOME/Downloads'
  alias desk='cd $HOME/Desktop'
#  alias vim='mvim -v'
 # alias vi='mvim -v'
  alias serial_number='system_profiler |grep "r (system)"'

  alias system_log='tail -f /var/log/system.log'
  alias kernel_log='tail -f /var/log/kernel.log'
  alias restart_finder='killall -KILL Finder'
  alias restart_dock='killall -KILL Dock'

  alias cwd="pwd | pbcopy && pwd"  # copy present working dir to clipboard
  alias ea="mate -w $DOTFILE/bash/aliases && reload" # Edit aliases
  alias ee="mate $DOTFILE//bash/env"
  alias es="mate $HOME/entwicklung/scripts"
  alias o='open . &'
  pdfman(){
      man -t $1 | open -f -a /Applications/Preview.app/
  }

  alias iphone_simulator="open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app"

# Track who is listening to your iTunes music
alias whotunes='lsof -r 2 -n -P -F n -c iTunes -a -i TCP@`hostname`:3689'
function google() { open /Applications/Google\ Chrome.app/ "http://www.google.com/search?q= $1"; }


#this is only for osx mavericks
  if [[ -s /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh ]]; then
    source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
  fi
  
  if [ -f $(brew --prefix)/etc/bash_completion ]; then
      . $(brew --prefix)/etc/bash_completion
  
    # show branch commandline
    GIT_PS1_SHOWDIRTYSTATE=true
    GIT_PS1_SHOWUNTRACKEDFILES=true
  	GIT_PS1_SHOWSTASHSTATE=true
    PS1='\e[1;32m[\u:\e[1;33m\w\e[1;32m]:\[\e[1;31m\]$(__git_ps1)\033[00m\] \nâ†’ '
  fi
  
  export EDITOR="atom"

  PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH

fi

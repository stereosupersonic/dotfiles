#!/usr/bin/ruby  
puts "load #{__FILE__}" 

def all_models
  result = []
  Dir.glob(RAILS_ROOT + '/app/models/*.rb').each do |file|
    filename = File.split(file)[-1]
    model = filename.split('.')[0].classify.constantize
    result << model if (model.respond_to? :table_name )
  end
  result
end

def sql(query)
  ActiveRecord::Base.connection.select_all(query)
end

def sql_bench(query, runs = 10)
  puts
  pp sql("EXPLAIN #{query}").first
  puts
  puts "#{runs} runs in"
  runs_time = Benchmark.realtime { runs.times { sql(query) } }
  puts " #{runs_time}"
end


def db_inspect
  ActiveRecord::Base.connection.tables.sort.each do |table|
    count = ActiveRecord::Base.connection.select_value("SELECT COUNT(*) FROM #{table}").to_i
    puts "%10s #{table}" % count
  end
  nil
end

def change_log(stream)
  ActiveRecord::Base.logger = Logger.new(stream)
  ActiveRecord::Base.clear_active_connections!
end

def show_log
  change_log(STDOUT)
end

def hide_log
  change_log(nil)
end

def logon
  show_log
end

def logoff
  hide_log
end  

puts "SQL logging ein/ausschalten mit logon/logoff" 